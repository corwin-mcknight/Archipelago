#pragma once

#include <ktl/type_traits>
#include <ktl/utility>

namespace ktl {

template <typename T> constexpr T const& max(T const& a, T const& b) { return a > b ? a : b; }
template <typename T> constexpr T const& min(T const& a, T const& b) { return a < b ? a : b; }
template <class T> constexpr const T& clamp(const T& v, const T& lo, const T& hi) {
    return (v < lo) ? lo : (hi < v) ? hi : v;
}

template <class T> constexpr void swap(T& a, T& b) noexcept {
    T temp = ktl::move(a);
    a      = ktl::move(b);
    b      = ktl::move(temp);
}

}  // namespace ktl